import telebot
import config
import user_table
import film_table

bot = telebot.AsyncTeleBot(config.API_TOKEN)


#  todo admin panel


@bot.message_handler(commands=["start"])
def welcome_user(message):
    if message.chat.type == 'private':
        user_data = user_table.UserTable('database.db')
        markup_inline = telebot.types.InlineKeyboardMarkup(row_width=1)
        #  todo replace with employer chat id
        subscribe = telebot.types.InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª",
                                                       url="t.me/joinchat/zEmgN-Vc3sMwN2Iy")
        markup_inline.add(subscribe)
        cont_watching = telebot.types.InlineKeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="check_followed")
        markup_inline.add(cont_watching)
        if message.from_user.first_name is None:
            bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.last_name}!".
                             format(message.from_user), reply_markup=markup_inline)
        elif message.from_user.last_name is None:
            bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!".
                             format(message.from_user), reply_markup=markup_inline)
        else:
            bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name} {0.last_name}!".
                             format(message.from_user, message.from_user), reply_markup=markup_inline)

        user_data.add_person(message.from_user.id)
        user_data.close()


@bot.callback_query_handler(func=lambda call: True)
def work(call):
    if call.data == "check_followed":
        if bot.get_chat_member(config.CHAT_ID, call.message.chat.id).wait().status in config.STATUS_FOLLOWED:
            bot.delete_message(call.message.chat.id, call.message.id)
            markup_reply = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            search_button = telebot.types.KeyboardButton("–ü–æ–∏—Å–∫")
            list_button = telebot.types.KeyboardButton("–°–ø–∏—Å–æ–∫ —Å–µ—Ä–∏–∞–ª–æ–≤")
            markup_reply.add(search_button, list_button)

            user_data = user_table.UserTable('database.db')
            if user_data.get_admin(call.message.chat.id):
                adm_panel = telebot.types.KeyboardButton("–í–∫–ª—é—á–∏—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                markup_reply.add(adm_panel)
            bot.send_message(call.message.chat.id, text="–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, –ø—Ä–∏—è—Ç–Ω–æ–≥–æ "
                                                        "–ø—Ä–æ—Å–º–æ—Ç—Ä–∞!\n "
                                                        "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–∏–∞–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∏—â–µ—Ç–µ, "
                                                        "–∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ!",
                             reply_markup=markup_reply)
        else:
            bot.answer_callback_query(callback_query_id=call.id,
                                      text='–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª! –°–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ!')


@bot.message_handler(content_types=["text"])
def reply_to_request(message):
    if message.chat.type == 'private':
        user_data = user_table.UserTable('database.db')
        if message.text == "–ü–æ–∏—Å–∫":
            bot.send_message(message.chat.id, text="üîé –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–∏–∞–ª–∞.")
        #  todo fkn list of series by deleting message
        elif message.text == "–°–ø–∏—Å–æ–∫ —Å–µ—Ä–∏–∞–ª–æ–≤":
            bot.send_message(message.chat.id, text="üîé–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–∏–∞–ª–æ–≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é ("
                                                   "–∞–ª—Ñ–∞–≤–∏—Ç—É).\n\n–ö–∞–∫–æ–π —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–µ—Ä–∏–∞–ª?")

        elif user_data.get_admin(message.from_user.id) and message.text == "–í–∫–ª—é—á–∏—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞":
            keyboard = telebot.types.ReplyKeyboardRemove()
            delete_keyboard = bot.send_message(message.chat.id, text="–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞:",
                                               reply_markup=keyboard)
            bot.delete_message(message.chat.id, delete_keyboard.wait().message_id)

            admin_markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            add_film_button = telebot.types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º")
            num_of_film_button = telebot.types.KeyboardButton("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–ª—å–º–æ–≤")
            num_of_users_button = telebot.types.KeyboardButton("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            list_films_button = telebot.types.KeyboardButton("–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤")
            change_genre_by_id_button = telebot.types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∂–∞–Ω—Ä –ø–æ ID")
            change_name_by_id_button = telebot.types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ ID")
            delete_by_id_button = telebot.types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –ø–æ ID")
            find_id_by_name_button = telebot.types.KeyboardButton("–ù–∞–π—Ç–∏ —Ñ–∏–ª—å–º –ø–æ ID –ø–æ ID")
            change_year_by_id_button = telebot.types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ–¥ –ø–æ ID")
            exit_button = telebot.types.KeyboardButton("–í—ã—Ö–æ–¥")

            admin_markup.add(add_film_button, num_of_film_button, num_of_users_button, list_films_button,
                             list_films_button, change_genre_by_id_button, change_name_by_id_button,
                             delete_by_id_button, find_id_by_name_button, change_year_by_id_button, exit_button)

            bot.send_message(chat_id=delete_keyboard.wait().chat.id, text="–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞",
                             reply_markup=admin_markup)

        elif user_data.get_admin(message.from_user.id) and message.text == "–í—ã—Ö–æ–¥":
            markup_reply = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            search_button = telebot.types.KeyboardButton("–ü–æ–∏—Å–∫")
            list_button = telebot.types.KeyboardButton("–°–ø–∏—Å–æ–∫ —Å–µ—Ä–∏–∞–ª–æ–≤")
            markup_reply.add(search_button, list_button)
            adm_panel = telebot.types.KeyboardButton("–í–∫–ª—é—á–∏—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            markup_reply.add(adm_panel)
            bot.send_message(message.chat.id, text="–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞", reply_markup=markup_reply)

        else:
            film_data = film_table.FilmTable('film_database.db')
            try:
                film_id = film_data.find_film(message.text)[3]
                bot.send_video(message.chat.id, film_id, timeout=1000, supports_streaming=True)
            except IndexError:
                bot.send_message(message.chat.id, text="–ù–µ—Ç —Ç–∞–∫–æ–≥–æ —Ñ–∏–ª—å–º–∞!")


@bot.message_handler(content_types=["video"])
def upload_video(message):
    #  todo add description, name etc.
    user_data = user_table.UserTable('database.db')
    if user_data.get_admin(message.from_user.id):
        film_data = film_table.FilmTable('film_database.db')
        film_data.add_film("–ü—É—Å—Ç–æ–π", message.video.file_id)
        #  todo print id of added film
        answ = bot.send_message(message.chat.id, text="–î–æ–±–∞–≤—å—Ç–µ –∏–º—è —Ñ–∏–ª—å–º–∞:")
        bot.register_next_step_handler(answ, name_of_video)
        film_data.close()
    else:
        bot.send_message(message.chat.id, text="–£ –≤–∞—Å –Ω–µ –ø—Ä–∞–≤ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –≤ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞.")
    user_data.close()


def name_of_video(message):
    #  todo check if input message is wrong and alert user
    #  todo other options year, genre etc.
    num, name = message.text.split(maxsplit=1)
    film_data = film_table.FilmTable('film_database.db')
    film_data.change_name_rus(num, name)
    bot.send_message(message.chat.id, text="–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!")
    film_data.close()
    return


if __name__ == "__main__":
    bot.polling()
